{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Me\\\\Desktop\\\\projects\\\\wiki-viewer-rebirth\\\\src\\\\components\\\\searchbar.js\",\"C:\\\\Users\\\\Me\\\\Desktop\\\\projects\\\\wiki-viewer-rebirth\\\\src\\\\components\\\\randobutton.js\",\"C:\\\\Users\\\\Me\\\\Desktop\\\\projects\\\\wiki-viewer-rebirth\\\\src\\\\components\\\\searchlist.js\",\"C:\\\\Users\\\\Me\\\\Desktop\\\\projects\\\\wiki-viewer-rebirth\\\\src\\\\components\\\\searchresults.js\",\"C:\\\\Users\\\\Me\\\\Desktop\\\\projects\\\\wiki-viewer-rebirth\\\\src\\\\App.js\",\"C:\\\\Users\\\\Me\\\\Desktop\\\\projects\\\\wiki-viewer-rebirth\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\Me\\\\Desktop\\\\projects\\\\wiki-viewer-rebirth\\\\src\\\\index.js\"],\"names\":[\"SearchBar\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"term\",\"_this2\",\"react_default\",\"a\",\"createElement\",\"className\",\"placeholder\",\"name\",\"value\",\"onChange\",\"event\",\"onInputChange\",\"target\",\"setState\",\"onSearch\",\"Component\",\"RandoButton\",\"href\",\"SearchList\",\"_ref\",\"article\",\"Link\",\"pageid\",\"title\",\"SearchResults\",\"Results\",\"articles\",\"map\",\"searchlist\",\"key\",\"App\",\"wikiSearch\",\"axios\",\"get\",\"then\",\"response\",\"console\",\"log\",\"data\",\"query\",\"allpages\",\"catch\",\"err\",\"_this3\",\"qwikSearch\",\"_\",\"debounce\",\"searchbar\",\"randobutton\",\"searchresults\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"uRA0BeA,cAtBb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAM,CACTC,KAAM,IAHQR,wEAOV,IAAAS,EAAAN,KACN,OACEO,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAA,CAAOE,YAAY,iBAAiBC,KAAK,GAAGC,MAAOb,KAAKI,MAAMC,KAAMS,SAAU,SAAAC,GAAK,OAAIT,EAAKU,cAAcD,EAAME,OAAOJ,iDAK/GR,GACZL,KAAKkB,SAAS,CAACb,KAAAA,IACfL,KAAKJ,MAAMuB,SAASd,UAlBAe,EAAAA,4BCKTC,EANK,SAACzB,GACnB,OACEW,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,IAAA,CAAGa,KAAK,+CAA+CL,OAAO,QAAQP,UAAU,OAAhF,oBCSba,EAXI,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACbC,EAAO,kCAAoCD,EAAQE,OACzD,OACEpB,EAAAC,EAAAC,cAAA,MAAA,KACAF,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,WACZH,EAAAC,EAAAC,cAAA,IAAA,CAAGa,KAAMI,EAAMT,OAAO,SAASQ,EAAQG,UCW9BC,EAfO,SAACjC,GACrB,IAAMkC,EAAUlC,EAAMmC,SAASC,IAAI,SAAAP,GACjC,OACElB,EAAAC,EAAAC,cAACwB,EAAD,CAAgBC,IAAKT,EAAQE,OAAQF,QAASA,MAGlD,OACElB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,KAAA,KACGqB,KCuCQK,cA1Cb,SAAAA,EAAYvC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,IAChBtC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqC,GAAAhC,KAAAH,KAAMJ,KACDQ,MAAM,CACT2B,SAAU,GACV1B,KAAM,MAJQR,oFASlBG,KAAKoC,WAAW,gDAGP/B,GAAK,IAAAC,EAAAN,KACdqC,EAAAA,EAAMC,IAAI,8FAA+FjC,EAAM,kEAAmEA,EAAM,4CACrLkC,KAAK,SAACC,GACLC,QAAQC,IAAIF,GACZlC,EAAKY,SAAS,CAACa,SAASS,EAASG,KAAKC,MAAMC,UAAW,WACrDJ,QAAQC,IAAI1C,KAAKI,WAGpB0C,MAAM,SAACC,GACNN,QAAQC,IAAIK,sCAMP,IAAAC,EAAAhD,KACDiD,EAAaC,EAAAA,EAAEC,SAAS,SAAC9C,GAAU2C,EAAKZ,WAAW/B,IAAQ,KAGjE,OACEE,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,UAAd,oBACAH,EAAAC,EAAAC,cAAC2C,EAAD,CAAWjC,SAAU8B,IACrB1C,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAC6C,EAAD,CAAevB,SAAU/B,KAAKI,MAAM2B,mBArCxBX,EAAAA,WCIEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,KAAK,SAAA6B,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, {Component} from 'react';\\r\\n\\r\\n\\r\\nclass SearchBar extends Component{\\r\\n  constructor(props){\\r\\n    super(props);\\r\\n    this.state={\\r\\n      term: ''\\r\\n    };\\r\\n\\r\\n  }\\r\\n  render(){\\r\\n    return(\\r\\n      <div className=\\\"search-bar\\\">\\r\\n        <input placeholder=\\\"Type to Search\\\" name=\\\"\\\" value={this.state.term} onChange={event => this.onInputChange(event.target.value)}/>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n\\r\\n  onInputChange(term){\\r\\n    this.setState({term});\\r\\n    this.props.onSearch(term);\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\nexport default SearchBar;\\r\\n\",\"import React from 'react';\\r\\n\\r\\nconst RandoButton = (props) => {\\r\\n  return(\\r\\n    <div className=\\\"center\\\"><a href=\\\"https://en.wikipedia.org/wiki/Special:Random\\\" target=\\\"blank\\\" className=\\\"btn\\\">Random Article</a></div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default RandoButton;\\r\\n\",\"import React from 'react';\\r\\n\\r\\nconst SearchList = ({article}) => {\\r\\n  const Link = 'http://en.wikipedia.org/?curid=' + article.pageid;\\r\\n  return(\\r\\n    <div>\\r\\n    <li className=\\\"content\\\">\\r\\n      <a href={Link} target=\\\"blank\\\">{article.title}</a>\\r\\n    </li>\\r\\n  </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default SearchList;\\r\\n\",\"import React from 'react';\\r\\nimport SearchListItem from './searchlist'\\r\\n\\r\\nconst SearchResults = (props) =>{\\r\\n  const Results = props.articles.map(article => {\\r\\n    return(\\r\\n      <SearchListItem key={article.pageid} article={article} />\\r\\n    );\\r\\n  });\\r\\n  return  (\\r\\n    <div className=\\\"container\\\">\\r\\n    <ul>\\r\\n      {Results}\\r\\n    </ul>\\r\\n  </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default SearchResults;\\r\\n\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport axios from 'axios';\\nimport SearchBar from './components/searchbar'\\nimport _ from 'lodash';\\nimport RandoButton from './components/randobutton'\\nimport SearchResults from './components/searchresults';\\n\\nclass App extends Component {\\n  constructor(props){\\n    super(props);\\n    this.state={\\n      articles: [],\\n      term: null\\n\\n    }\\n  }\\ncomponentWillMount(){\\n  this.wikiSearch('Wikipedia');\\n}\\n\\nwikiSearch(term){\\n  axios.get('https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles='+ term +'&prop=revisions&rvlimit=10&rvprop=content&list=allpages&apfrom='+ term +'&aplimit=10&alprop=ids|title&format=json')\\n    .then((response) => {\\n      console.log(response)\\n      this.setState({articles:response.data.query.allpages}, function(){\\n        console.log(this.state);\\n      });\\n    })\\n    .catch((err) =>{\\n      console.log(err)\\n    });\\n}\\n\\n\\n\\n  render() {\\n    const qwikSearch = _.debounce((term) => {this.wikiSearch(term)}, 300)\\n\\n\\n    return (\\n      <div className=\\\"App\\\">\\n      <h1 className=\\\"header\\\">Wikipedia Search</h1>\\n      <SearchBar onSearch={qwikSearch}/>\\n      <RandoButton />\\n      <SearchResults articles={this.state.articles}/>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{17:function(e,t,a){e.exports=a(48)},22:function(e,t,a){},25:function(e,t,a){},48:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),i=a(14),c=a.n(i),o=(a(22),a(2)),l=a(3),s=a(5),u=a(4),h=a(6),p=(a(25),a(15)),m=a.n(p),d=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(s.a)(this,Object(u.a)(t).call(this,e))).state={term:\"\"},a}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e=this;return r.a.createElement(\"div\",{className:\"search-bar\"},r.a.createElement(\"input\",{placeholder:\"Type to Search\",name:\"\",value:this.state.term,onChange:function(t){return e.onInputChange(t.target.value)}}))}},{key:\"onInputChange\",value:function(e){this.setState({term:e}),this.props.onSearch(e)}}]),t}(n.Component),f=a(16),v=a.n(f),k=function(e){return r.a.createElement(\"div\",{className:\"center\"},r.a.createElement(\"a\",{href:\"https://en.wikipedia.org/wiki/Special:Random\",target:\"blank\",className:\"btn\"},\"Random Article\"))},g=function(e){var t=e.article,a=\"http://en.wikipedia.org/?curid=\"+t.pageid;return r.a.createElement(\"div\",null,r.a.createElement(\"li\",{className:\"content\"},r.a.createElement(\"a\",{href:a,target:\"blank\"},t.title)))},w=function(e){var t=e.articles.map(function(e){return r.a.createElement(g,{key:e.pageid,article:e})});return r.a.createElement(\"div\",{className:\"container\"},r.a.createElement(\"ul\",null,t))},b=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(s.a)(this,Object(u.a)(t).call(this,e))).state={articles:[],term:null},a}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"componentWillMount\",value:function(){this.wikiSearch(\"Wikipedia\")}},{key:\"wikiSearch\",value:function(e){var t=this;m.a.get(\"https://cors-anywhere.herokuapp.com/https://en.wikipedia.org/w/api.php?action=query&titles=\"+e+\"&prop=revisions&rvlimit=10&rvprop=content&list=allpages&apfrom=\"+e+\"&aplimit=10&alprop=ids|title&format=json\").then(function(e){console.log(e),t.setState({articles:e.data.query.allpages},function(){console.log(this.state)})}).catch(function(e){console.log(e)})}},{key:\"render\",value:function(){var e=this,t=v.a.debounce(function(t){e.wikiSearch(t)},300);return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"h1\",{className:\"header\"},\"Wikipedia Search\"),r.a.createElement(d,{onSearch:t}),r.a.createElement(k,null),r.a.createElement(w,{articles:this.state.articles}))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[17,2,1]]]);","extractedComments":[]}